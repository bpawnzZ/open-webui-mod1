services:
  # ollama:
  #   volumes:
  #     - ollama:/root/.ollama
  #   container_name: ollama
  #   pull_policy: always
  #   tty: true
  #   restart: unless-stopped
  #   image: ollama/ollama:latest
  #   dns:
  #     - 100.100.100.100  # Added Cloudflare's secondary DNS as a backup

  open-webui:
    build:
      context: .
      args:
        #OLLAMA_BASE_URL: '/ollama'
        dockerfile: Dockerfile
    image: ghcr.io/open-webui/open-webui:latest
    container_name: open-webui
    privileged: true
    volumes:
      - ./open-webui:/app/backend/data
    # depends_on:
    #   - ollama
    ports:
      # - ${OPEN_WEBUI_PORT-3333}:8080
      - 3333:8080
    extra_hosts:
      - "host.docker.internal:host-gateway"
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.open-webui.entrypoints=websecure"
      - "traefik.http.routers.open-webui.rule=Host(`open-webui.2damoon.xyz`)"
      - "traefik.http.routers.open-webui.tls.certresolver=letsencrypt"
      - "traefik.http.services.open-webui.loadbalancer.server.port=8080"
    dns:
      - 1.1.1.1  # Added Cloudflare's secondary DNS as a backup 
    networks:
      - caddy_default
    environment:
      VECTOR_DB: qdrant
      # CHROMA_HTTP_HOST: chroma2
      # CHROMA_HTTP_PORT: 8000
      # CHROMA_CLIENT_AUTH_PROVIDER: chromadb.auth.basic_authn.BasicAuthClientProvider
      # CHROMA_HTTP_SSL: False
      # CHROMA_CLIENT_AUTH_CREDENTIALS: admin:Snotobot0bot
      QDRANT_URI: http://qdrant:6333
      QDRANT_API_KEY: Snotobot0bot

volumes:
  # ollama: {}
  open-webui: {}
networks:
  caddy_default:
    external: true

